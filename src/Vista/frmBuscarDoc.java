package Vista;

import Datos.Documento;
import Datos.Oficina;
import Modelo.Modelo_Tabla_Bus_doc;
import Modelo.imgTabla;
import Negocio.DocumentoBo;
import Negocio.OficinaBo;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Cursor;
import java.awt.Desktop;
import java.awt.Font;
import java.awt.event.MouseEvent;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumnModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author Cristhian Millier Flores Pasapera
 * @gamail 7050423891@untrm.edu.pe
 * @telefono 934576998
 */
public class frmBuscarDoc extends javax.swing.JInternalFrame {

    private String cargo = "default";
    private Modelo_Tabla_Bus_doc MTD = new Modelo_Tabla_Bus_doc();

    /**
     * Creates new form frmBuscarDoc
     */
    public frmBuscarDoc() {
        initComponents();
        this.botones();
        this.cargarCombox();
        this.definir_tamaño_columna();

        this.tablaDocumento.setDefaultRenderer(Object.class, new imgTabla());
        this.txtFechaFin.setCursor(new Cursor(Cursor.HAND_CURSOR));
        this.txtFechaInicio.setCursor(new Cursor(Cursor.HAND_CURSOR));
        this.tablaDocumento.setRowHeight(30);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txtFechaInicio = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFechaFin = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        comboOficina = new javax.swing.JComboBox<>();
        btnBuscar1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaDocumento = new javax.swing.JTable();

        setClosable(true);
        setTitle("Buscar Documento");

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));

        txtFechaInicio.setDateFormatString("yyyy-MM-dd");
        txtFechaInicio.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Fecha Inicio:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Fecha Fin:");

        txtFechaFin.setDateFormatString("yyyy-MM-dd");
        txtFechaFin.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Sección:");

        comboOficina.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        comboOficina.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        btnBuscar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/lupa.png"))); // NOI18N
        btnBuscar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txtFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(txtFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addComponent(comboOficina, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btnBuscar1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnBuscar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtFechaInicio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtFechaFin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboOficina, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        JTextFieldDateEditor editor = (JTextFieldDateEditor) txtFechaInicio.getDateEditor();
        editor.setEditable(false);
        JTextFieldDateEditor editor1 = (JTextFieldDateEditor) txtFechaFin.getDateEditor();
        editor1.setEditable(false);
        AutoCompleteDecorator.decorate(comboOficina);

        jPanel3.setBackground(new java.awt.Color(0, 153, 153));

        tablaDocumento.setModel(this.MTD);
        tablaDocumento.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tablaDocumento.getTableHeader().setResizingAllowed(false);
        tablaDocumento.getTableHeader().setReorderingAllowed(false);
        tablaDocumento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaDocumentoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaDocumento);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 833, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscar1ActionPerformed
        this.clicBuscar();
    }//GEN-LAST:event_btnBuscar1ActionPerformed

    private void tablaDocumentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaDocumentoMouseClicked
        this.clicTabla(evt);
    }//GEN-LAST:event_tablaDocumentoMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar1;
    private javax.swing.JComboBox<Oficina> comboOficina;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaDocumento;
    private com.toedter.calendar.JDateChooser txtFechaFin;
    private com.toedter.calendar.JDateChooser txtFechaInicio;
    // End of variables declaration//GEN-END:variables

    public void setCargo(String cargo) {
        this.cargo = cargo;
    }

    private void clicBuscar() {
        Oficina objBusc = new Oficina();
        ArrayList<Documento> ltsDocumento = null;
        if (this.comboOficina.getItemAt(this.comboOficina.getSelectedIndex()) != null) {
            objBusc = this.comboOficina.getItemAt(this.comboOficina.getSelectedIndex());
        }
        try {
            if (this.comboOficina.getSelectedIndex() != 0 || (!((JTextField) this.txtFechaInicio.getDateEditor().getUiComponent()).getText().equals(""))
                    || (!((JTextField) this.txtFechaFin.getDateEditor().getUiComponent()).getText().equals(""))) {
                if (this.comboOficina.getSelectedIndex() != 0 && ((JTextField) this.txtFechaInicio.getDateEditor().getUiComponent()).getText().equals("")
                        && ((JTextField) this.txtFechaFin.getDateEditor().getUiComponent()).getText().equals("")) {
                    ltsDocumento = DocumentoBo.obtenerListaOficina(objBusc.getIdOficina(), cargo);
                }
                if (this.comboOficina.getSelectedIndex() == 0 && (!((JTextField) this.txtFechaInicio.getDateEditor().getUiComponent()).getText().equals(""))
                        && ((JTextField) this.txtFechaFin.getDateEditor().getUiComponent()).getText().equals("")) {
                    ltsDocumento = DocumentoBo.obtenerListaFechaRecp((String) ((JTextField) this.txtFechaInicio.getDateEditor().getUiComponent()).getText(), cargo);
                }
                if (this.comboOficina.getSelectedIndex() != 0 && (!((JTextField) this.txtFechaInicio.getDateEditor().getUiComponent()).getText().equals(""))
                        && ((JTextField) this.txtFechaFin.getDateEditor().getUiComponent()).getText().equals("")) {
                    ltsDocumento = DocumentoBo.obtenerListaFechaRecpOficina(objBusc.getIdOficina(), ((JTextField) this.txtFechaInicio.getDateEditor().getUiComponent()).getText(), cargo);
                }
                if (this.comboOficina.getSelectedIndex() == 0 && (!((JTextField) this.txtFechaInicio.getDateEditor().getUiComponent()).getText().equals(""))
                        && (!((JTextField) this.txtFechaFin.getDateEditor().getUiComponent()).getText().equals(""))) {
                    ltsDocumento = DocumentoBo.obtenerListaRangFechaRecp((String) ((JTextField) this.txtFechaInicio.getDateEditor().getUiComponent()).getText(),
                            (String) ((JTextField) this.txtFechaFin.getDateEditor().getUiComponent()).getText(), cargo);
                }
                if (this.comboOficina.getSelectedIndex() != 0 && (!((JTextField) this.txtFechaInicio.getDateEditor().getUiComponent()).getText().equals(""))
                        && (!((JTextField) this.txtFechaFin.getDateEditor().getUiComponent()).getText().equals(""))) {
                    ltsDocumento = DocumentoBo.obtenerListaRangFechaRecpOficina(objBusc.getIdOficina(),
                            ((JTextField) this.txtFechaInicio.getDateEditor().getUiComponent()).getText(),
                            ((JTextField) this.txtFechaFin.getDateEditor().getUiComponent()).getText(), cargo);
                }
                MTD.setListado_Documento(ltsDocumento);
                if (ltsDocumento.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "No se han encontrado documentos según lo especificado.", "MENSAJE --> BUSCAR DOC.", JOptionPane.INFORMATION_MESSAGE);
                }
                this.limpiarBusqueda();
            } else {
                JOptionPane.showMessageDialog(this, "Usted no a especificado como realizar la busqueda.", "MENSAJE --> BUSCAR DOC.", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    private void botones() {
        this.btnBuscar1.setOpaque(false);
        this.btnBuscar1.setContentAreaFilled(false);
        this.btnBuscar1.setBorderPainted(false);
        this.btnBuscar1.setToolTipText("Buscar");
    }

    private void cargarCombox() {
        this.comboOficina.removeAllItems();
        Oficina objOficina = new Oficina();
        objOficina.setNombre("--Seleccione--");
        this.comboOficina.addItem(objOficina);

        try {
            OficinaBo.obtenerListaComboOficina(this.comboOficina, cargo);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    private void definir_tamaño_columna() {
        TableColumnModel columnModel = this.tablaDocumento.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(100);
        columnModel.getColumn(1).setPreferredWidth(100);
        columnModel.getColumn(2).setPreferredWidth(450);
        columnModel.getColumn(3).setPreferredWidth(150);
        columnModel.getColumn(4).setPreferredWidth(150);
        columnModel.getColumn(5).setPreferredWidth(150);

        this.tablaDocumento.getTableHeader().setFont(new Font("Tahoma", 1, 12));
        ((DefaultTableCellRenderer) this.tablaDocumento.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
    }

    private void limpiarBusqueda() {
        this.comboOficina.setSelectedIndex(0);
        this.txtFechaFin.setCalendar(null);
        this.txtFechaInicio.setCalendar(null);
    }

    private void clicTabla(MouseEvent evt) {
        int column = this.tablaDocumento.getColumnModel().getColumnIndexAtX(evt.getX());
        int row = this.tablaDocumento.getSelectedRow(); //fila
        Documento objD = new Documento();

        if (row < this.tablaDocumento.getRowCount() && row >= 0 && column < this.tablaDocumento.getColumnCount() && column >= 0) {
            objD = MTD.getDocumento(row);

            Object value = this.tablaDocumento.getValueAt(row, column);
            if (value instanceof JButton) {
                ((JButton) value).doClick();
                JButton boton = (JButton) value;

                if (boton.getText().equals("VACÍO")) {
                    JOptionPane.showMessageDialog(this, "No existe el archivo en la Base de Datos.", "MENSAJE --> Documento", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    try {
                        InputStream bos = new ByteArrayInputStream(objD.getArchivopdf());
                        int tamanoInput = bos.available();
                        byte[] datosPDF = new byte[tamanoInput];
                        bos.read(datosPDF, 0, tamanoInput);
                        OutputStream out = new FileOutputStream("new.pdf");
                        out.write(datosPDF);
                        //abrir archivo
                        out.close();
                        bos.close();
                        Desktop.getDesktop().open(new File("new.pdf"));
                    } catch (Exception ex) {
                        System.out.println(ex.getMessage());
                        JOptionPane.showMessageDialog(this, "Error al Intentar Abrir el Archivo", "MENSAJE --> DOCUMENTO", JOptionPane.ERROR_MESSAGE);
                    }
                }

            }
        }
    }
}
