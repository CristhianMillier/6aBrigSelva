package Vista;

import Datos.Personal;
import Datos.Oficina;
import Datos.Grado;
import Datos.Login;
import Modelo.Encriptar;
import Modelo.Modelo_Tabla_Personal;
import Negocio.GradoBo;
import Negocio.LoginBo;
import Negocio.OficinaBo;
import Negocio.PersonalBo;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumnModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author Cristhian Millier Flores Pasapera
 * @gamail 7050423891@untrm.edu.pe
 * @telefono 934576998
 */
public class frmPersonal extends javax.swing.JInternalFrame {

    private String cargo = "default";
    private Login objL = new Login();
    private int id = 0;
    private Modelo_Tabla_Personal MTP = new Modelo_Tabla_Personal();
    private Personal objP = null;
    private Oficina objO = null;
    private Grado objG = null;

    /**
     * Creates new form frmPersonal
     */
    public frmPersonal() {
        initComponents();
        this.botonos();
        this.cargarTabla();
        this.cargarCombox();
        this.definir_tama√±o_columna();
        this.activarControles(false);

        this.txtNacimiento.setCursor(new Cursor(Cursor.HAND_CURSOR));
        this.TablaPersonal.setRowHeight(25);
        this.txtEstado.setToolTipText(null);
        this.btnEstado.setToolTipText(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        btnCancelar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtApellido = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtDni = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNacimiento = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        comboGrado = new javax.swing.JComboBox<>();
        comboOficina = new javax.swing.JComboBox<>();
        btnEstado = new javax.swing.JCheckBox();
        txtEstado = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        btnVisible = new javax.swing.JCheckBox();
        txtTelefono1 = new javax.swing.JTextField();
        txtTelefono3 = new javax.swing.JTextField();
        txtTelefono2 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        txtBuscar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaPersonal = new javax.swing.JTable();
        btnEditar = new javax.swing.JButton();

        setClosable(true);
        setTitle("Personal");

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));

        btnCancelar.setBackground(new java.awt.Color(255, 255, 255));
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cancelar.png"))); // NOI18N
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/documento.png"))); // NOI18N
        btnNuevo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/disquete.png"))); // NOI18N
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/codigo-limpio.png"))); // NOI18N
        btnLimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/eliminar.png"))); // NOI18N
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/salida.png"))); // NOI18N
        btnSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSalir)
                    .addComponent(btnGuardar)
                    .addComponent(btnNuevo)
                    .addComponent(btnLimpiar)
                    .addComponent(btnEliminar)
                    .addComponent(btnCancelar))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos del Personal", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nombre:");

        txtNombre.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Apellido:");

        txtApellido.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtApellidoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("DNI:");

        txtDni.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtDni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDniKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDniKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Tel√©fono:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Nacimiento:");

        txtNacimiento.setDateFormatString("yyyy-MM-dd");
        txtNacimiento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtNacimiento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNacimientoKeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Secci√≥n:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Grado:");

        comboGrado.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        comboGrado.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        comboOficina.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        comboOficina.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        btnEstado.setBackground(new java.awt.Color(0, 153, 153));
        btnEstado.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnEstado.setSelected(true);
        btnEstado.setToolTipText("");
        btnEstado.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEstado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/seleccion.png"))); // NOI18N
        btnEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEstadoActionPerformed(evt);
            }
        });

        txtEstado.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtEstado.setText("Activo");
        txtEstado.setToolTipText("");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Usuario:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Password:");

        txtUser.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUserKeyPressed(evt);
            }
        });

        txtPassword.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPasswordKeyPressed(evt);
            }
        });

        btnVisible.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVisible.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/invisible_peque√±o.png"))); // NOI18N
        btnVisible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisibleActionPerformed(evt);
            }
        });

        txtTelefono1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtTelefono1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTelefono1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTelefono1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefono1KeyTyped(evt);
            }
        });

        txtTelefono3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtTelefono3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTelefono3KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefono3KeyTyped(evt);
            }
        });

        txtTelefono2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtTelefono2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTelefono2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTelefono2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefono2KeyTyped(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("-");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("-");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(comboOficina, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtNacimiento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                                    .addComponent(txtDni, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtApellido, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboGrado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtUser, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPassword, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnVisible))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtTelefono1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTelefono2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTelefono3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(btnEstado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTelefono1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTelefono3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTelefono2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(txtNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(comboOficina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(comboGrado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnVisible))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(txtEstado)
                        .addGap(41, 41, 41))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnEstado)
                        .addGap(28, 28, 28))))
        );

        JTextFieldDateEditor editor = (JTextFieldDateEditor) txtNacimiento.getDateEditor();
        editor.setEditable(false);
        AutoCompleteDecorator.decorate(comboGrado);
        AutoCompleteDecorator.decorate(comboOficina);

        jPanel4.setBackground(new java.awt.Color(0, 153, 153));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Personal Registrado", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        txtBuscar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });

        TablaPersonal.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        TablaPersonal.setModel(this.MTP);
        TablaPersonal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        TablaPersonal.getTableHeader().setResizingAllowed(false);
        TablaPersonal.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(TablaPersonal);

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/editar-codigo.png"))); // NOI18N
        btnEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 183, Short.MAX_VALUE)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEditar)
                        .addGap(97, 97, 97)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEditar)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNacimientoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNacimientoKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            this.comboOficina.requestFocus();
        }
    }//GEN-LAST:event_txtNacimientoKeyPressed

    private void btnEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEstadoActionPerformed
        this.buttonEstado();
    }//GEN-LAST:event_btnEstadoActionPerformed

    private void txtNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            this.txtApellido.requestFocus();
        }
    }//GEN-LAST:event_txtNombreKeyPressed

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
        this.validar_llenado(evt, 2);
    }//GEN-LAST:event_txtNombreKeyTyped

    private void txtApellidoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            this.txtDni.requestFocus();
        }
    }//GEN-LAST:event_txtApellidoKeyPressed

    private void txtApellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoKeyTyped
        this.validar_llenado(evt, 2);
    }//GEN-LAST:event_txtApellidoKeyTyped

    private void txtDniKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            this.txtTelefono1.requestFocus();
        }
    }//GEN-LAST:event_txtDniKeyPressed

    private void txtDniKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniKeyTyped
        this.validar_llenado(evt, 1);
        if (this.txtDni.getText().trim().length() >= 8) {
            getToolkit().beep(); //sonido de alerta
            evt.consume();
        }
    }//GEN-LAST:event_txtDniKeyTyped

    private void btnVisibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisibleActionPerformed
        this.buttonClave();
    }//GEN-LAST:event_btnVisibleActionPerformed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        this.buscar();
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        this.buttonEditar();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        this.activarControles(true);
        this.limpiar();
        this.cargarTabla();
        this.txtBuscar.setText("");
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        this.limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.limpiar();
        this.activarControles(false);
        this.cargarTabla();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        this.eliminar();
        this.cargarTabla();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        this.guardar();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void txtTelefono1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefono1KeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            this.txtTelefono2.requestFocus();
        }
    }//GEN-LAST:event_txtTelefono1KeyPressed

    private void txtTelefono1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefono1KeyTyped
        this.validar_llenado(evt, 1);
        if (this.txtTelefono1.getText().trim().length() >= 3) {
            getToolkit().beep(); //sonido de alerta
            evt.consume();
        }
    }//GEN-LAST:event_txtTelefono1KeyTyped

    private void txtTelefono2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefono2KeyTyped
        this.validar_llenado(evt, 1);
        if (this.txtTelefono2.getText().trim().length() >= 3) {
            getToolkit().beep(); //sonido de alerta
            evt.consume();
        }
    }//GEN-LAST:event_txtTelefono2KeyTyped

    private void txtTelefono2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefono2KeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            this.txtTelefono3.requestFocus();
        }
    }//GEN-LAST:event_txtTelefono2KeyPressed

    private void txtTelefono3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefono3KeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            this.txtNacimiento.requestFocus();
        }
    }//GEN-LAST:event_txtTelefono3KeyPressed

    private void txtTelefono3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefono3KeyTyped
        this.validar_llenado(evt, 1);
        if (this.txtTelefono3.getText().trim().length() >= 3) {
            getToolkit().beep(); //sonido de alerta
            evt.consume();
        }
    }//GEN-LAST:event_txtTelefono3KeyTyped

    private void txtTelefono1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefono1KeyReleased
        if (this.txtTelefono1.getText().trim().length() == 3) {
            this.txtTelefono2.requestFocus();
        }
    }//GEN-LAST:event_txtTelefono1KeyReleased

    private void txtTelefono2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefono2KeyReleased
        if (this.txtTelefono2.getText().trim().length() == 3) {
            this.txtTelefono3.requestFocus();
        }
    }//GEN-LAST:event_txtTelefono2KeyReleased

    private void txtUserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            this.txtPassword.requestFocus();
        }
    }//GEN-LAST:event_txtUserKeyPressed

    private void txtPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            this.btnGuardar.doClick();
        }
    }//GEN-LAST:event_txtPasswordKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaPersonal;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JCheckBox btnEstado;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnSalir;
    private javax.swing.JCheckBox btnVisible;
    private javax.swing.JComboBox<Grado> comboGrado;
    private javax.swing.JComboBox<Oficina> comboOficina;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtDni;
    private javax.swing.JLabel txtEstado;
    private com.toedter.calendar.JDateChooser txtNacimiento;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtTelefono1;
    private javax.swing.JTextField txtTelefono2;
    private javax.swing.JTextField txtTelefono3;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables

    private void botonos() {
        this.btnCancelar.setOpaque(false);
        this.btnCancelar.setContentAreaFilled(false);
        this.btnCancelar.setBorderPainted(false);
        this.btnCancelar.setToolTipText("Cancelar");

        this.btnNuevo.setOpaque(false);
        this.btnNuevo.setContentAreaFilled(false);
        this.btnNuevo.setBorderPainted(false);
        this.btnNuevo.setToolTipText("Nuevo");

        this.btnGuardar.setOpaque(false);
        this.btnGuardar.setContentAreaFilled(false);
        this.btnGuardar.setBorderPainted(false);
        this.btnGuardar.setToolTipText("Guardar");

        this.btnLimpiar.setOpaque(false);
        this.btnLimpiar.setContentAreaFilled(false);
        this.btnLimpiar.setBorderPainted(false);
        this.btnLimpiar.setToolTipText("Limpiar");

        this.btnEliminar.setOpaque(false);
        this.btnEliminar.setContentAreaFilled(false);
        this.btnEliminar.setBorderPainted(false);
        this.btnEliminar.setToolTipText("Eliminar");

        this.btnSalir.setOpaque(false);
        this.btnSalir.setContentAreaFilled(false);
        this.btnSalir.setBorderPainted(false);
        this.btnSalir.setToolTipText("Salir");

        this.btnEditar.setOpaque(false);
        this.btnEditar.setContentAreaFilled(false);
        this.btnEditar.setBorderPainted(false);
        this.btnEditar.setToolTipText("Editar");
    }

    private void cargarCombox() {
        this.comboOficina.removeAllItems();
        Oficina objOficina = new Oficina();
        objOficina.setNombre("--Seleccione--");
        this.comboOficina.addItem(objOficina);

        this.comboGrado.removeAllItems();
        Grado objGr = new Grado();
        objGr.setNombre("--Seleccione--");
        this.comboGrado.addItem(objGr);

        try {
            OficinaBo.obtenerListaComboOficina(this.comboOficina, cargo);
            GradoBo.obtenerListaComboGrado(this.comboGrado, cargo);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    public void setCargo(String cargo, int id) {
        this.cargo = cargo;
        this.id = id;
    }

    private void validar_llenado(java.awt.event.KeyEvent evt, int opc) {
        //opc: 1 es para ingresar solo n√∫meros
        //opc: 2 es para ingresar solo letras
        char validar = evt.getKeyChar();
        if (opc == 1) {
            if (Character.isLetter(validar) && validar != KeyEvent.VK_SPACE
                    && validar != KeyEvent.VK_ENTER) {
                getToolkit().beep(); //sonido de alerta
                evt.consume();
            }
        }
        if (opc == 2) {
            if (Character.isDigit(validar) && validar != KeyEvent.VK_SPACE
                    && validar != KeyEvent.VK_ENTER) {
                getToolkit().beep(); //sonido de alerta
                evt.consume();
            }
        }
    }

    private void cargarTabla() {
        try {
            ArrayList<Personal> ltsPersonal = PersonalBo.obtenerListaPersonal(cargo);
            MTP.setListado_Personal(ltsPersonal);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    private void definir_tama√±o_columna() {
        TableColumnModel columnModel = this.TablaPersonal.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(250);
        columnModel.getColumn(1).setPreferredWidth(250);
        columnModel.getColumn(2).setPreferredWidth(150);
        columnModel.getColumn(3).setPreferredWidth(150);
        columnModel.getColumn(4).setPreferredWidth(200);
        columnModel.getColumn(5).setPreferredWidth(150);

        this.TablaPersonal.getTableHeader().setFont(new Font("Tahoma", 1, 14));
        ((DefaultTableCellRenderer) this.TablaPersonal.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
    }

    private void activarControles(boolean estado) {
        this.txtNombre.setEnabled(estado);
        this.txtApellido.setEnabled(estado);
        this.txtDni.setEnabled(estado);
        this.txtNacimiento.setEnabled(estado);
        this.txtTelefono1.setEnabled(estado);
        this.txtTelefono2.setEnabled(estado);
        this.txtTelefono3.setEnabled(estado);
        this.comboOficina.setEnabled(estado);
        this.comboGrado.setEnabled(estado);
        this.txtUser.setEnabled(estado);
        this.txtPassword.setEnabled(estado);
        this.btnVisible.setEnabled(estado);
        this.btnEstado.setEnabled(estado);
        this.btnGuardar.setEnabled(estado);
        this.btnLimpiar.setEnabled(estado);
        this.btnCancelar.setEnabled(estado);
        this.txtEstado.setEnabled(estado);

        this.btnNuevo.setEnabled(!estado);
        this.txtBuscar.setEnabled(!estado);
        this.TablaPersonal.setEnabled(!estado);
        this.btnEliminar.setEnabled(!estado);
        this.btnEditar.setEnabled(!estado);

        if (estado) {
            TablaPersonal.setBackground(new java.awt.Color(255, 102, 102));
        } else {
            TablaPersonal.setBackground(new java.awt.Color(255, 255, 255));
        }
    }

    private void cargarDatos(Personal objP) throws ParseException {
        Encriptar encriptar = new Encriptar();

        String fecha = objP.getNacimiento();
        String anio = fecha.substring(0, 4);
        String mes = fecha.substring(5, 7);
        String dia = fecha.substring(8, 10);
        java.util.Date fechaParseada = new SimpleDateFormat("yyyy-MM-dd").parse(anio + "-" + mes + "-" + dia);

        String num = String.valueOf(objP.getTelefono());
        String telef1 = num.substring(0, 3);
        String telef2 = num.substring(3, 6);
        String telef3 = num.substring(6, 9);

        this.txtNombre.setText(objP.getNombre());
        this.txtApellido.setText(objP.getApellido());
        this.txtDni.setText(objP.getDni());
        this.txtNacimiento.setDate(fechaParseada);
        this.txtTelefono1.setText(telef1);
        this.txtTelefono2.setText(telef2);
        this.txtTelefono3.setText(telef3);
        this.comboOficina.getModel().setSelectedItem(objP.getIdSeccion());
        this.comboGrado.getModel().setSelectedItem(objP.getIdGrado());

        if (objP.getIdPersonal() == this.id) {
            this.btnEstado.setEnabled(false);
            this.txtEstado.setEnabled(false);
        }

        if (objP.getEstado().equals("Activo")) {
            this.btnEstado.setSelected(true);
            ImageIcon icono = new ImageIcon("src/Imagenes/seleccion.png");
            this.btnEstado.setIcon(icono);
            this.txtEstado.setText("Activo");
        } else {
            this.btnEstado.setSelected(false);
            ImageIcon icono = new ImageIcon("src/Imagenes/no-seleccion.png");
            this.btnEstado.setIcon(icono);
            this.txtEstado.setText("Inactivo");
        }

        try {
            this.objL = LoginBo.buscarPersonal(objP.getIdPersonal(), cargo);
            this.txtUser.setText(objL.getUser());
            this.txtPassword.setText(encriptar.deecnode(objL.getPassword()));
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }

        this.objG = objP.getIdGrado();
        this.objO = objP.getIdSeccion();
    }

    private void limpiar() {
        this.txtNombre.setText("");
        this.txtApellido.setText("");
        this.txtDni.setText("");
        this.txtNacimiento.setCalendar(null);
        this.txtTelefono1.setText("");
        this.txtTelefono2.setText("");
        this.txtTelefono3.setText("");
        this.comboOficina.setSelectedIndex(0);
        this.comboGrado.setSelectedIndex(0);
        this.txtUser.setText("");
        this.txtPassword.setText("");

        this.btnEstado.setSelected(true);
        ImageIcon icono = new ImageIcon("src/Imagenes/seleccion.png");
        this.btnEstado.setIcon(icono);
        this.txtEstado.setText("Activo");

        ImageIcon icono1 = new ImageIcon("src/Imagenes/invisible_peque√±o.png");
        btnVisible.setIcon(icono1);
        this.txtPassword.setEchoChar('*');

        objP = null;
        objO = null;
        objG = null;
    }

    private void eliminar() {
        if (this.TablaPersonal.getSelectedRow() != -1) {
            int fila = this.TablaPersonal.getSelectedRow();
            Personal objPer = MTP.getPersonal(fila);
            if (objPer.getEstado().equals("Activo")) {
                if (objPer.getIdPersonal() != this.id) {
                    int confirm = JOptionPane.showConfirmDialog(this, "¬øEst√° seguro que desea eliminar al personal "
                            + objPer.toString() + " ?", "ELIMINAR PERSONAL", JOptionPane.YES_NO_OPTION);
                    if (confirm == 0) {
                        try {
                            if (PersonalBo.eliminarPersonal(objPer, cargo) && LoginBo.eliminarLogin(new Login(0, "", "", objPer.getIdPersonal(), ""), cargo)) {
                                this.cargarTabla();
                                this.limpiar();
                                this.activarControles(false);
                            } else {
                                JOptionPane.showMessageDialog(this, "No se pudo Eliminar", "MENSAJE --> PERSONAL", JOptionPane.ERROR_MESSAGE);
                            }
                        } catch (Exception e) {
                            System.out.println(e.getMessage());
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "No puede eliminarse usted mismo.", "MENSAJE --> PERSONAL", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "El personal selecionado ya se encuentra Inactivo.", "MENSAJE --> PERSONAL", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Usted no a seleccionado un campo en la tabla.", "MENSAJE --> PERSONAL", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void guardar() {
        if (this.general()) {
            if (this.txtDni.getText().trim().length() == 8) {
                if (this.obtenerTelf().length() == 9) {
                    this.obtenerDatosCombo();
                    Encriptar encriptar = new Encriptar();
                    String contra = encriptar.ecnode(new String(txtPassword.getPassword()));
                    Personal objPer = new Personal(0, this.txtNombre.getText(), this.txtApellido.getText(),
                            ((JTextField) this.txtNacimiento.getDateEditor().getUiComponent()).getText(), this.txtDni.getText(),
                            this.obtenerTelf(), this.objO, this.objG, this.txtEstado.getText());
                    Login objLog = new Login(0, this.txtUser.getText(), contra, 0, this.txtEstado.getText());
                    try {
                        if (this.objP == null) {
                            if (PersonalBo.buscarUser(objLog.getUser(), cargo)) {
                                if (PersonalBo.buscarDNI(objPer.getDni(), cargo)) {
                                    if (PersonalBo.grabarPersonal(objPer, cargo)) {
                                        JOptionPane.showMessageDialog(this, "Se Registr√≥ Correctamente", "MENSAJE --> PERSONAL", JOptionPane.INFORMATION_MESSAGE);
                                    } else {
                                        JOptionPane.showMessageDialog(this, "No se pudo Registrar", "MENSAJE --> PERSONAL", JOptionPane.ERROR_MESSAGE);
                                    }
                                    objLog.setIdPersonal(PersonalBo.obtenerUltimoId(cargo));
                                    LoginBo.grabarLogin(objLog, cargo);
                                    this.limpiar();
                                    this.activarControles(false);
                                    this.cargarTabla();
                                } else {
                                    JOptionPane.showMessageDialog(this, "El DNI ingresado ya se encuentra registrado.", "MENSAJE --> PERSONAL", JOptionPane.WARNING_MESSAGE);
                                }
                            } else {
                                JOptionPane.showMessageDialog(this, "El usuario ingresado ya se encuentra registrado.", "MENSAJE --> PERSONAL", JOptionPane.WARNING_MESSAGE);
                            }
                        } else {
                            boolean existeDNI = true, existeUser = true;
                            objPer.setIdPersonal(this.objP.getIdPersonal());
                            if (!objPer.getDni().equals(this.objP.getDni())) {
                                existeDNI = PersonalBo.buscarDNI(objPer.getDni(), cargo);
                            }
                            if (!objLog.getUser().equals(this.objL.getUser())) {
                                existeUser = PersonalBo.buscarUser(objLog.getUser(), cargo);
                            }
                            if (existeDNI) {
                                if (existeUser) {
                                    if (PersonalBo.modificarPersonal(objPer, cargo)) {
                                        JOptionPane.showMessageDialog(this, "Se Modific√≥ Correctamente", "MENSAJE --> PERSONAL", JOptionPane.INFORMATION_MESSAGE);
                                    } else {
                                        JOptionPane.showMessageDialog(this, "No se pudo Modificar", "MENSAJE --> PERSONAL", JOptionPane.ERROR_MESSAGE);
                                    }
                                    objLog.setIdPersonal(objPer.getIdPersonal());
                                    LoginBo.modificarLogin(objLog, cargo);
                                    this.limpiar();
                                    this.activarControles(false);
                                    this.cargarTabla();
                                } else{
                                    JOptionPane.showMessageDialog(this, "El usuario ingresado ya se encuentra registrado.", "MENSAJE --> PERSONAL", JOptionPane.WARNING_MESSAGE);
                                }
                            } else{
                                JOptionPane.showMessageDialog(this, "El DNI ingresado ya se encuentra registrado.", "MENSAJE --> PERSONAL", JOptionPane.WARNING_MESSAGE);
                            }
                        }
                    } catch (Exception e) {
                        System.out.println(e.getMessage());
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "El Tel√©fono no esta bien especificado.", "MENSAJE --> PERSONAL", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "El DNI no esta bien especificado.", "MENSAJE --> PERSONAL", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Verifique que todos los campos hallan sido llenados.", "MENSAJE --> PERSONAL", JOptionPane.WARNING_MESSAGE);
        }
    }

    private boolean general() {
        String paa = new String(txtPassword.getPassword());
        if (this.txtNombre.getText().trim().equals("")
                || this.txtApellido.getText().trim().equals("") || this.txtDni.getText().trim().equals("")
                || this.txtTelefono1.getText().trim().equals("") || this.txtTelefono2.getText().trim().equals("") || this.txtTelefono3.getText().trim().equals("")
                || ((JTextField) this.txtNacimiento.getDateEditor().getUiComponent()).getText().trim().equals("")
                || this.comboOficina.getSelectedIndex() == 0 || this.comboGrado.getSelectedIndex() == 0
                || this.txtUser.getText().trim().equals("") || paa.trim().equals("")) {
            return false;

        } else {
            return true;
        }
    }

    private void obtenerDatosCombo() {
        if (this.comboOficina.getItemAt(this.comboOficina.getSelectedIndex()) != null) {
            this.objO = this.comboOficina.getItemAt(this.comboOficina.getSelectedIndex());
        }

        if (this.comboGrado.getItemAt(this.comboGrado.getSelectedIndex()) != null) {
            this.objG = this.comboGrado.getItemAt(this.comboGrado.getSelectedIndex());
        }
    }

    private String obtenerTelf() {
        String telefo = this.txtTelefono1.getText().trim();
        telefo += this.txtTelefono2.getText().trim();
        telefo += this.txtTelefono3.getText().trim();
        return telefo;
    }

    private void buttonEstado() {
        if (this.btnEstado.isSelected()) {
            ImageIcon icono = new ImageIcon("src/Imagenes/seleccion.png");
            this.btnEstado.setIcon(icono);
            this.txtEstado.setText("Activo");
        } else {
            ImageIcon icono = new ImageIcon("src/Imagenes/no-seleccion.png");
            this.btnEstado.setIcon(icono);
            this.txtEstado.setText("Inactivo");
        }
    }

    private void buttonClave() {
        if (btnVisible.isSelected()) {
            ImageIcon icono = new ImageIcon("src/Imagenes/visible_peque√±o.png");
            btnVisible.setIcon(icono);
            this.txtPassword.setEchoChar((char) 0);
        } else {
            ImageIcon icono = new ImageIcon("src/Imagenes/invisible_peque√±o.png");
            btnVisible.setIcon(icono);
            this.txtPassword.setEchoChar('*');
        }
    }

    private void buttonEditar() {
        this.txtBuscar.setText("");
        int fila = this.TablaPersonal.getSelectedRow();
        if (fila != -1) {
            this.objP = MTP.getPersonal(fila);
            try {
                this.activarControles(true);
                this.cargarDatos(objP);
                this.cargarTabla();
            } catch (ParseException ex) {
                System.out.println(ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Usted no a seleccionado un campo en la tabla.", "MENSAJE --> PERSONAL", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void buscar() {
        String buscar = this.txtBuscar.getText().trim();
        ArrayList<Personal> ltsPersonal = new ArrayList();
        try {
            ltsPersonal = PersonalBo.buscarDNIPersonal(buscar, cargo);
            if (ltsPersonal.isEmpty()) {
                ltsPersonal = PersonalBo.buscarApellidoPersonal(buscar, cargo);
            }
            MTP.setListado_Personal(ltsPersonal);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
}
